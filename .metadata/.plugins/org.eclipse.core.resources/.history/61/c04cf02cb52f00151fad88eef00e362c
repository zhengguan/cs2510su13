// assignment 02
// Ex 03

import javax.xml.crypto.Data;

import tester.Tester;

// HTDC Ex 3.1
class RealEstateRecord {
	String kind; 
	int room; // number of rooms
	Address address;
	int price;
	
	public RealEstateRecord(String kind, int room, 
				Address address, int price) {
		this.kind = kind;
		this.room = room;
		this.address = address;
		this.price = price;
	}
}

class Address {
	int number; // street number
	String name; // street name
	String city; 
	
	Address(int number, String name, String city) {
		this.number = number;
		this.name = name;
		this.city = city;
	}
}

class RealEatateRecordExamples {
	Address ad1 = new Address(23, "Maple Street", "Brookline");
	Address ad2 = new Address(5, "Joye Road", "Newton");
	Address ad3 = new Address(83, "Winslow Road", "Waltham");
	
	RealEstateRecord r1 = new RealEstateRecord("Ranch", 7, ad1, 375000);
	RealEstateRecord r2 = new RealEstateRecord("Colonial", 9, ad2, 450000);
	RealEstateRecord r3 = new RealEstateRecord("Cape", 6, ad3, 235000);
}

/******************************************************************************/

// HTDC Ex 4.4

// REPRESENTS: a bank account
interface IAccount {}

abstract class Account implements IAccount {
	String id; // id number
	String name; // customer's name
	int balance; // in dollar
	
	Account(String id, String name, int balance) {
		this.id = id;
		this.name = name;
		this.balance = balance;
	}
}

// REPRESENTS: a checking account
class CheckingAccount extends Account {
	int minBalance; // minimum balance in dollar
	
	public CheckingAccount(String id, String name, 
			int balance, int minBalance) {
		super(id, name, balance);
		this.minBalance = minBalance;
	}
}

// REPRESENTS: a savings account 
class SavingsAcount extends Account {
	int interestRate; // actual interest rate multiply 1000
	
	public SavingsAcount(String id, String name, 
			int balance, int interestRate) {
		super(id, name, balance);
		this.interestRate = interestRate;
	}
}

// REPRESENTS: a certificate of deposit
class CD extends Account {
	int interestRate; // actual interest rate multiply 1000
	Date maturityDate;
	
	CD(String id, String name, int balance,
			int interestRate, Date maturityDate) {
		super(id, name, balance);
		this.interestRate = interestRate;
		this.maturityDate = maturityDate;
	}
}

// REPRESENTS: a date
class Date {
	int year;
	int month;
	int day;
	
	Date(int year, int month, int day) {
		this.year = year;
		this.month = month;
		this.day = day;
	}
}

class AccountExamples {
	Date d1 = new Date(2005, 6, 1);
	
	IAccount earl = new CheckingAccount("1729", "Earl Gray", 1250, 500);
	IAccount ima = new CD("4104", "Ima flatt", 10123, 40, d1);
	IAccount annie = new SavingsAcount("2992", "Annie", 800, 25);
}