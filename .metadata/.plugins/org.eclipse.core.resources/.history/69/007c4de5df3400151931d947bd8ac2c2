// lab04
// http://www.ccs.neu.edu/course/cs2510su13-1/labs/lab4.html
import tester.Tester;

// Ex 05~07

// REPRESENTS: a binary tree
interface IBT<X> {
	
}

// REPRESENTS: an empty binary tree
class MtBT<X> implements IBT<X> {
	MtBT(){}
}

// REPRESENTS: a non-empty binary tree
class NMtBT<X> implements IBT<X> {
	X val;
	IBT<X> left;
	IBT<X> right;
	
	NMtBT(X val, IBT<X> left, IBT<X> right) {
		this.val = val;
		this.left = left;
		this.right = right;
	}
}

class BTExamples {
	IBT<Integer> mt = new MtBT<Integer>();
	IBT<Integer> bt1 = new NMtBT<Integer>(1, mt, mt);
	IBT<Integer> bt2 = new NMtBT<Integer>(2, bt1, mt);
}